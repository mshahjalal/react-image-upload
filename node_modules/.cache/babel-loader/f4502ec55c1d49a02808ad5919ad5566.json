{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadshahjalal/Documents/Dev/react-image-upload/src/components/upload-files.component.js\";\nimport React, { Component } from \"react\";\nimport UploadService from \"../services/upload-files.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n      fileInfos: []\n    };\n  }\n\n  componentDidMount() {}\n\n  selectFile(event) {\n    this.setState({\n      selectedFiles: event.target.files\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    UploadService.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      console.log(\"fullImageUrl:\", response.data.imageUpload[0].fullImageUrl);\n      console.log(\"thumbnailImageUrl:\", response.data.imageUpload[0].thumbnailImageUrl);\n      this.setState({\n        message: response.data.message\n      });\n      return response.data.imageUpload[0];\n    }).then(files => {\n      console.log(\"uploaded files:\", files);\n      this.setState({\n        fileInfos: files\n      });\n    }).catch(() => {\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined\n      });\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-info progress-bar-striped\",\n          role: \"progressbar\",\n          \"aria-valuenow\": progress,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: progress + \"%\"\n          },\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-default\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.selectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        disabled: !selectedFiles,\n        onClick: this.upload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-light\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"List of Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: fileInfos && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: fileInfos.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mohammadshahjalal/Documents/Dev/react-image-upload/src/components/upload-files.component.js"],"names":["React","Component","UploadService","UploadFiles","constructor","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","fileInfos","componentDidMount","event","setState","target","files","Math","round","loaded","total","then","response","console","log","data","imageUpload","fullImageUrl","thumbnailImageUrl","catch","render","width","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport UploadService from \"../services/upload-files.service\";\n\nexport default class UploadFiles extends Component {\n    constructor(props) {\n        super(props);\n        this.selectFile = this.selectFile.bind(this);\n        this.upload = this.upload.bind(this);\n\n        this.state = {\n            selectedFiles: undefined,\n            currentFile: undefined,\n            progress: 0,\n            message: \"\",\n\n            fileInfos: [],\n        };\n    }\n\n    componentDidMount() {\n        \n    }\n\n    selectFile(event) {\n        this.setState({\n            selectedFiles: event.target.files,\n        });\n    }\n\n    upload() {\n        let currentFile = this.state.selectedFiles[0];\n\n        this.setState({\n            progress: 0,\n            currentFile: currentFile,\n        });\n\n        UploadService.upload(currentFile, (event) => {\n            this.setState({\n                progress: Math.round((100 * event.loaded) / event.total),\n            });\n        })\n            .then((response) => {\n                console.log(\"fullImageUrl:\",response.data.imageUpload[0].fullImageUrl);\n                console.log(\"thumbnailImageUrl:\",response.data.imageUpload[0].thumbnailImageUrl);\n                this.setState({\n                    message: response.data.message,\n                });\n                return response.data.imageUpload[0];\n            })\n            .then((files) => {\n                console.log(\"uploaded files:\",files);\n                this.setState({\n                    fileInfos: files,\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    progress: 0,\n                    message: \"Could not upload the file!\",\n                    currentFile: undefined,\n                });\n            });\n\n        this.setState({\n            selectedFiles: undefined,\n        });\n    }\n\n    render() {\n        const {\n            selectedFiles,\n            currentFile,\n            progress,\n            message,\n            fileInfos,\n        } = this.state;\n\n        return (\n            <div>\n                {currentFile && (\n                    <div className=\"progress\">\n                        <div\n                            className=\"progress-bar progress-bar-info progress-bar-striped\"\n                            role=\"progressbar\"\n                            aria-valuenow={progress}\n                            aria-valuemin=\"0\"\n                            aria-valuemax=\"100\"\n                            style={{ width: progress + \"%\" }}\n                        >\n                            {progress}%\n                        </div>\n                    </div>\n                )}\n\n                <label className=\"btn btn-default\">\n                    <input type=\"file\" onChange={this.selectFile} />\n                </label>\n\n                <button\n                    className=\"btn btn-success\"\n                    disabled={!selectedFiles}\n                    onClick={this.upload}\n                >\n                    Upload\n                </button>\n\n                <div className=\"alert alert-light\" role=\"alert\">\n                    {message}\n                </div>\n\n                <div className=\"card\">\n                    <div className=\"card-header\">List of Files</div>\n                    <ul className=\"list-group list-group-flush\">\n                        {fileInfos && (\n                            <li className=\"list-group-item\">\n                                {fileInfos.name}\n                            </li>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}